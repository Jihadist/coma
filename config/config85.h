#ifndef CONFIG85_H
#define CONFIG85_H

#define ID8085_START    1101

#include "config.h"
#include "../gen/publicclass.h"

class Config85
{
public:
    explicit Config85(QVector<publicclass::DataRec> &config);

    typedef struct
    {
        quint32 Eq_type;    // Тип коммутируемого оборудования: 0 – свободно конфигурируемый режим 1 – конденсаторная батарея (фильтр)
                            // 2 – реактор шунтирующий, 3 – Силовой трансформатор, 4 – Линия электропередачи
        quint32 Core_type;  // Тип магнитопровода: 0 – три однофазных, 1 – трехфазный трехстержневой, 2 – трехфазный пятистержневой (с шунтом)
        quint32 D_win;      //  Наличие обмотки, соединенной в треуг.: 0 – нет, 1 – есть
        quint32 N_Type;     // Схема подключения нейтрали: 0 – заземленная, 1 – изолированная
        quint32 Op_type;	// Тип обслуживаемых коммутационных операций: 0 – несинхронизируемые включение и отключение выключателя
                            // 1 – только синхронное включение, 2 – только синхронное отключение, 3 – синхронное включение и отключение
        quint32 Is_U2;  	// Наличие (1) или отсутствие (0) сигналов второй тройки напряжений (сторона нагрузки)
        quint32 Residue;	// Учитывается (1) или нет (0) остаточный магнитный поток при коммутации трансформатора
        quint32 RESnom_OFF[3];  // Количество выполненных операций отключения для каждого полюса
        quint32 RESnom_ON[3];	// Количество выполненных операций включения для каждого полюса
        float RESkz[3]; 	// Начальное значение электрического износа для каждого полюса
        quint32 RESnom_max;	// Предельное значение механического ресурса
        float RESkz_max; 	// Предельное значение коммутационного ресурса
        float Unom; 		// Класс напряжения (номинальное линейное первичное напряжение внешнего ТН, кВ)
        float Inom; 		// Номинальный ток выключателя, А
        float Ikz;			// Максимальный коммутируемый ток КЗ, кА
        float ITT1nom;      // Номинальный первичный ток внешнего ТТ, А
        float ITT2nom;      // Номинальный вторичный ток внешнего ТТ (1А или 5А)
        float T_arc;    	// Минимальное время, предоставляемое  для горения дуги, мс
        float RDDS; 		// Cкорость снижения пробивного напряжения между контактами при включении, кВ/мс
        float RRDS; 		// Cкорость роста пробивного напряжения между контактами при отключении, кВ/мс
        float Ts_OFF[3];	// Собственное время отключения полюсов А,В,С, мс
        float Ts_ON[3]; 	// Собственное время включения полюсов А,В,С мс
        float Tzad_OFF[3];	// Задержка отключения полюсов А,В,С в свободно конфигурируемом режиме относительно перехода через ноль
                            // напряжения фазы А, мс
        float Tzad_ON[3];	// Задержка включения полюсов А,В,С в свободно конфигурируемом режиме относительно перехода через ноль
                            // напряжения фазы А, мс
        float Tbk_OFF[3];	// Механическая задержка срабатывания блок-контакта отключенного состояния относительно перемещения главного контакта
                            // для полюсов А,В,С, мс
        float Tbk_ON[3];	// Механическая задержка срабатывания блок-контакта включенного состояния относительно перемещения главного контакта
                            // для полюсов А,В,С, мс
        float DUosc;		// Уставка скачка напряжения для запуска осциллографирования (в % от номинала)
        float DIosc;		// Уставка скачка тока для запуска осциллографирования (в % от ITT2nom)
        float DUmin; 		// Уставка контроля минимума напряжения (в % от номинала)
        float DImin; 		// Уставка контроля минимума тока (в % от номинала)
                            // Уставки предупредительной и аварийной сигнализации:
        float Ts_OFFpred;	// Собственное время отключения полюса выключателя (повышенное значение / предупредительная уставка)
        float Ts_OFFalarm;	// Собственное время отключения полюса выключателя (повышенное значение / аварийная уставка)
        float Ts_ONpred;	// Собственное время включения полюса выключателя (повышенное значение / предупредительная уставка)
        float Ts_ONalarm;	// Собственное время включения полюса выключателя (повышенное значение / аварийная уставка)
        float Tmain_OFFpred;    // Время перемещения главного контакта при отключении полюса выключателя (повышенное значение / предупредительная уставка)
        float Tmain_OFFalarm;   // Время перемещения главного контакта при отключении полюса выключателя (повышенное значение / аварийная уставка)
        float Tmain_ONpred;     // Время перемещения главного контакта при включении полюса выключателя (повышенное значение / предупредительная уставка)
        float Tmain_ONalarm;    // Время перемещения главного контакта при включении полюса выключателя (повышенное значение / аварийная уставка)
        float dT_OFFpred;   // Погрешность выполненной синхронной коммутации при отключении (повышенное значение / предупредительная уставка)
        float dT_OFFalarm;	// Погрешность выполненной синхронной коммутации при отключении (повышенное значение / аварийная уставка)
        float dT_ONpred;	// Погрешность выполненной синхронной коммутации при включении (повышенное значение / предупредительная уставка)
        float dT_ONalarm;	// Погрешность выполненной синхронной коммутации при включении (повышенное значение / аварийная уставка)
        float Tras_pred;	// Время рассинхронизации фаз выключателя (повышенное значение / предупредительная уставка)
        float Tras_alarm;	// Время рассинхронизации фаз выключателя (повышенное значение / аварийная уставка)
        float Tarc_pred;	// Время горения дуги в полюсе выключателя (повышенное значение / предупредительная уставка)
        float Tarc_alarm;	// Время горения дуги в полюсе выключателя (повышенное значение / аварийная уставка)
        quint32 RESnom_pred;	// Остаточный механический ресурс (пониженное значение / предупредительная уставка)
        quint32 RESnom_alarm;   // Остаточный механический ресурс (пониженное значение / аварийная уставка)
        float RESkz_pred;   // Остаточный коммутационный ресурс (пониженное значение / предупредительная уставка)
        float RESkz_alarm;  // Остаточный коммутационный ресурс (пониженное значение / аварийная уставка)
        float I_pred;   	// Ток в выключателе при выполнении коммутации (повышенное значение / предупредительная уставка)
        float I_alarm;  	// Ток в выключателе при выполнении коммутации (повышенное значение / аварийная уставка)
                            // Признаки использования вспомогательных аналоговых сигналов:
        quint32 Aux;    	// Битовая сборка наличия аналоговых сигналов
        float K_on_volt;	// коэффициент коррекции времени включения выключателя по напряжению питания соленоидов
        float K_off_volt;	// коэффициент коррекции времени отключения выключателя по напряжению питания соленоидов
        float K_on_tamb;	// коэффициент коррекции времени включения выключателя по температуре окружающей среды
        float K_off_tamb;	// коэффициент коррекции времени отключения выключателя по температуре окружающей среды
        float K_on_tdr; 	// коэффициент коррекции времени включения выключателя по температуре в приводе
        float K_off_tdr;	// коэффициент коррекции времени отключения выключателя по температуре в приводе
        float K_on_hdr;     // коэффициент коррекции времени включения выключателя по давлению в приводе
        float K_off_hdr;	// коэффициент коррекции времени отключения выключателя по давлению в приводе
                            // Служебная информация:
        quint32 Adapt;      // 1 – использовать адаптивный алгоритм определения времен включения и отключения, 0 – не использовать.
        float TsolON;   	// допустимое время включения соленоида включения, мс
        float TsolOFF;      // допустимое время включения соленоида отключения, мс
    } Bci;

    Bci Bci_block;

    void SetDefConf();
};

#endif // CONFIG85_H
