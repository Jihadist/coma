#pragma once
#include <QMap>

/**
 *  Перечисление для хранения списка приборов
 */
namespace Modules
{

Q_NAMESPACE
enum Model
{
    KTF = 0xA287,
    KIV = 0xA284,
    KDV = 0xA387
};

Q_ENUM_NS(Model);
enum BaseBoards
{
    MTB_00 = 0x0000,
    MTB_12 = 0x1200,
    MTB_21 = 0x2100,
    MTB_22 = 0x2200,
    MTB_31 = 0x3100,
    MTB_35 = 0x3500,
    MTB_80 = 0x8000,
    MTB_81 = 0x8100,
    MTB_84 = 0x8400,
    MTB_85 = 0x8500,
    MTB_87 = 0x8700,
    MTB_A1 = 0xA100,
    MTB_A2 = 0xA200
};

enum MezzanineBoards
{
    MTM_00 = 0x0000,
    MTM_21 = 0x0021,
    MTM_22 = 0x0022,
    MTM_31 = 0x0031,
    MTM_35 = 0x0035,
    MTM_81 = 0x0081,
    MTM_82 = 0x0082,
    MTM_83 = 0x0083,
    MTM_84 = 0x0084,
    MTM_85 = 0x0085
};

static const QMap<quint16, QString> BaseBoards {
    { MTB_00, "АВ_ТУК-00" }, // нет базовой платы
    //        {MTB_12,{"АВ-ТУК-12 (ЦКУ)", 0x1200}}, // процессорный, не комбинируется
    { MTB_21, "АВ-ТУК-21" },     // аналоговый ввод DC, комбинируется с 2x,3x
    { MTB_22, "АВ-ТУК-22" },     // аналоговый ввод DC, комбинируется с 2x,3x
    { MTB_31, "АВ-ТУК-31" },     // дискретный ввод, комбинируется с 2x,3x
    { MTB_35, "АВ-ТУК-35" },     // дискретный вывод, комбинируется с 2x,3x
    { MTB_80, "АВТУК-" },        // аналоговый ввод AC, комбинируется с 81,82,83
    { MTB_81, "АВ-ТУК-81" },     // МНК3, комбинируется с 84
    { MTB_84, "АВ-ТУК-84" },     // НКВВ, комбинируется с 81,82,83
    { MTB_85, "АВ-ТУК-85" },     // УСК, комбинируется с 85
    { MTB_87, "АВ-ТУК-87 (ЧР)" } // ЧР, не комбинируется
    //        {MTB_A1,{"ПКС-1", 0xA100}}, // ПКДН, прибор для Туркота, не комбинируется
    //        {MTB_A2,{"АВМ", 0xA200}}, // МНК3, не комбинируется
};

static const QMap<quint16, QString> MezzanineBoards {
    { MTM_00, "" },           // нет мезонина
    { MTM_21, "21" },         // аналоговый ввод, комбинируется с 2x,3x
    { MTM_22, "22" },         // аналоговый ввод, комбинируется с 2x,3x
    { MTM_31, "31" },         // дискретный ввод, комбинируется с 2x,3x
    { MTM_35, "35" },         // дискретный вывод, комбинируется с 2x,3x
    { MTM_81, "81 (Э2Т0Н)" }, // 0U6I, комбинируется с 80,84
    { MTM_82, "82 (Э1Т1Н)" }, // 3U3I, комбинируется с 80,84
    { MTM_83, "83 (Э0Т2Н)" }, // 6U0I, комбинируется с 80,84
    { MTM_84, "84" },         // 3U3I, комбинируется с 80,81
    { MTM_85, "85 (УСК)" }    // 3U3I УСК (перегрузка по току 20х), комбинируется с 85
};

struct StartupInfoBlock
{
    quint32 MTypeB;
    quint32 MTypeM;
    quint32 HwverB;
    quint32 Fwver;
    quint32 Rst;
    quint32 RstCount;
    quint32 UIDLow;
    quint32 UIDMid;
    quint32 UIDHigh;
    quint32 SerialNumB;
    quint32 SerialNumM;
    quint32 HwverM;
    quint32 SerialNum;
    quint32 Cfcrc;
    quint32 Hth;
};

struct StartupInfoBlockExt
{
};

}
#define MAXERRORFLAGNUM 32

#define HTH_FNC 0x00000200     // частота не в допуске (Э)
#define HTH_LS 0x00000100      // сигналы малы (Э)
#define HTH_CONFIG 0x00000080  // в модуле нет конфигурации
#define HTH_REGPARS 0x00000040 // в модуле нет настроечных параметров
#define HTH_ADC 0x00000020     // проблема с АЦП (Э)
#define HTH_1PPS 0x00000010    // нет сигнала 1PPS
#define HTH_REL 0x00000008     // неисправность выходных реле (Д)
#define HTH_TUPP 0x00000004    // перегрев модуля

namespace AVM_KIV
{

const QStringList accidentEvents {
    "Авария по приращению тангенса дельта ввода фазы А", //
    "Авария по приращению тангенса дельта ввода фазы B", //
    "Авария по приращению тангенса дельта ввода фазы C", //
    "Авария по приращению C ввода фазы А              ", //
    "Авария по приращению C ввода фазы B              ", //
    "Авария по приращению C ввода фазы C              ", //
    "Авария по недопустимому небалансу токов          "  //
};
constexpr quint32 accidentFlags = 0x00000e39;
constexpr quint32 accidentCount = 7;
const QStringList warnEvents {
    "Отсутствует сигнал напряжения фазы A                   ", //
    "Отсутствует сигнал напряжения фазы B                   ", //
    "Отсутствует сигнал напряжения фазы С                   ", //
    "Ток утечки ввода фазы A меньше 0,3 номинального",         //
    "Ток утечки ввода фазы B меньше 0,3 номинального",         //
    "Ток утечки ввода фазы C меньше 0,3 номинального",         //
    "Не заданы начальные значения                           ", //
    "Низкое напряжение фазы A                               ", //
    "Низкое напряжение фазы B                               ", //
    "Низкое напряжение фазы C                               ", //
    "Сигнализация по приращению тангенса дельта ввода фазы А", //
    "Сигнализация по приращению тангенса дельта ввода фазы B", //
    "Сигнализация по приращению тангенса дельта ввода фазы C", //
    "Сигнализация по приращению C ввода фазы А              ", //
    "Сигнализация по приращению C ввода фазы B              ", //
    "Сигнализация по приращению C ввода фазы C              ", //
    "Не заданы паспортные значения                          ", //
    "Сигнализация по повышенному небалансу токов            "  //
};
constexpr quint32 warnFlags = 0x1fff1ec6;
constexpr quint32 workJourId = 3010;
struct MeasureStruct
{
    quint32 NUM;
    quint32 Time;
    float Ueff[3];
    float Ieff[3];
    float Frequency;
    float U0;
    float U1;
    float U2;
    float I0;
    float I1;
    float I2;
    float Cbush[3];
    float Tg_d[3];
    float dCbush[3];
    float dTg_d[3];
    float Iunb;
    float Phy_unb;
    float Tmk;
    float Tamb;
    quint32 res;
};
const QStringList workJourDescription {
    "Отсутствует сигнал напряжения фазы A",                    //
    "Отсутствует сигнал напряжения фазы B",                    //
    "Отсутствует сигнал напряжения фазы С",                    //
    "Нет реактивного тока канала А (ток меньше 2мА)",          //
    "Нет реактивного тока канала B (ток меньше 2мА)",          //
    "Нет реактивного тока канала C (ток меньше 2мА)",          //
    "Не заданы начальные значения",                            //
    "Низкое напряжение фазы A",                                //
    "Низкое напряжение фазы B",                                //
    "Низкое напряжение фазы C",                                //
    "Сигнализация по приращению тангенса дельта ввода фазы А", //
    "Сигнализация по приращению тангенса дельта ввода фазы B", //
    "Сигнализация по приращению тангенса дельта ввода фазы C", //
    "Авария по приращению тангенса дельта ввода фазы А",       //
    "Авария по приращению тангенса дельта ввода фазы B",       //
    "Авария по приращению тангенса дельта ввода фазы C",       //
    "Сигнализация по приращению C ввода фазы А",               //
    "Сигнализация по приращению C ввода фазы B",               //
    "Сигнализация по приращению C ввода фазы C",               //
    "Авария по приращению C ввода фазы А",                     //
    "Авария по приращению C ввода фазы B",                     //
    "Авария по приращению C ввода фазы C",                     //
    "Не заданы паспортные значения",                           //
    "Сигнализация по изменению небаланса тока",                //
    "Авария по изменению небаланса тока"                       //
};
const QStringList measJourHeaders {
    " № ",            //
    "Дата/Время UTC", //
    "Ueff фA",        //
    "Ueff фB",        //
    "Ueff фC",        //
    "Ieff фA",        //
    "Ieff фB",        //
    "Ieff фC",        //
    "Freq",           //
    "U0",             //
    "U1",             //
    "U2",             //
    "I0",             //
    "I1",             //
    "I2",             //
    "Cbush фA",       //
    "Cbush фB",       //
    "Cbush фC",       //
    "Tg_d фA",        //
    "Tg_d фB",        //
    "Tg_d фC",        //
    "dCbush фA",      //
    "dCbush фB",      //
    "dCbush фC",      //
    "dTg_d фA",       //
    "dTg_d фB",       //
    "dTg_d фC",       //
    "Iunb",           //
    "Phy_unb",        //
    "Tmk, °С",        //
    "Tamb, °С"        //
};
}
